linux commands
> is used to redirect the standard output of a command to a file. თუ ფაილი არ არსებობს, შეიქმნება. თუ არსებობს, გადაეწერება ახალი ინფო/ტექსტი
           	Echo “Hello, World!” > output.txt
>> is used to append the standard output of a command to a file. ფაილი თუ არ არსებობს, შეიქმნება, თუ არსებობს, დაემატება ახალი ინფო/ტექსტი
           	Echo “New Content” >> output.txt
< is used to redirect the standard input of a command from a file
           	Grep “keyword” < input.txt - ეძებს სიტყვა “keyword“-ს input ფაილში
| [pipe] – is used to redirect the output of one command as input to another command
           	ls -l | grep “file”
& - სიმბოლო იწერება პროგრამის/ბრაუზერის სახელის შემდეგ. ეს ქომანდი ჩართავს პროგრამას/ბრაუზერს მასში ცვლილებების შეტანის უფლებით
!7 - გარანავს მეშვიდე ქომანდს ისტორიიდან
/user/share/doc/ - directory of documentation for software packages
<command> --help - გამოაქვს ქომანდის მოკლე აღწერა გამოყენებასა და არგუმენტებზე
alias (name)="command"
apropos {keyword} – search the manual page and descriptions
cal - კალენდრისთვის
cal feb 1993 f.ecat file1 - გამოაქვს file1-ის შიგთავსი
cd (f.e. (/var/log)) - ცვლის სამუშაო დირქტორიებს
           	cd. - მიმდინარე დირექტორია
           	cd.. - მშობელი დირექტორია
           	cd- - წინა დირექტორიაში გადასვლა
           	cd~ - თავდაპირველ დირექტორიაში დაბრუნება
chattr +i file1 - ფაილურ სისტემაში ატრიბუტის დამატება
           	-i file1 - ფაილურ სისტემაში ატრიბუტის წაშლა
chfn –  sudo chfn username (და ამის მერე შეგვყავს მოცემული ინფო)
chgrp – sudo chgrp groupname file.txt
chmod u+w, g+r-w, o+r-x file1 - ანიჭებს/წაარათმევს წვდომებს იუზერს, ჯგუფს, სხვებს
chmod u=rw, g=r, o=r file2 – file2 გადაჰყავს იმავე რეჟიმში, რომელშიც არის file1
chmod a+x file1 – file1-ში იუზერს, ჯგუფს, სხვებს ანიჭებს ყველას ერთად execute წვდომასზ
chown – changing file ownership
           	chown username:groupname file1 – file1-ზე ownership აქვთ იუზერ username-ს და ჯგუფ groupname-ს
chsh username /bin/dash - უცვლის იუზერს შელს
clear - ტემინალის ეკრანის გასუფთავება
cmp file.txt file1.txt - ბიტებში ადარებს ფაილებს
comm file.txt file2.txt - ადარებს ფაილებს და პასუხი სამ სვეტად გამოაქვს:
           	პირველ სვეტში მხოლოდ ის ხაზია რომელიც მხოლოდ პირველ ფაილშია
           	მეორე სვეტში მხოლოდ ის ხაზია რომელიც მხოლოდ მეორე ფაილშია
           	მესამე სვეტში კი ერთნაირი, საერთო ხაზებია მოცემული
cp file1 file2 - აკოპირებს ფაილს ან დირექტორიას
           	cp -r dir1 /dir2
date - მიმდინარე თარიღი
df (df -h) - სისტემაზე დისკის მოცულობა
diff - ადარებს რამდენიმე ფაილს ერთდროულად, შეუძლია გადაიტანოს პასუხი სხვა ფაილში
du * - გვანახებს რამდენი ბლოკი დაიკავა დისკზე მიმდინარე დირექტორიის ფაილებმა, მოიაზრება 1024 ბაიტი
           	du -b * - სვეტებში გვანახებს ფაილის რეალურ ზომებს ó ls -l
           	du -sh ~ - გამოიტანს პირადი დირექტორიის ჯამურ ზომას
           	du -sbc ~/* - გამოიტანს პირად დირექტორიაში შემავალი ყველა ფაილისა და დირექტორიის ჯამურ ზომას ბაიტებში
echo - ტერმინალზე ტექსტის დაპრინტვა
exit - გამოსვლა
free - სისტემის თავისუფალი და დაკავებული მეხსიერების რაოდენობები kilobytes
find - ფაილებს ეძებს მოც. დირექტორიების მთლიან იერარქიულ სტრუქტურაში, ქვე-დირექტორიებშიც
           	find ~ - ჩვენს პირად დირექტორიაში არსებულ ყველა ფაილს გვანახებს ეკრანზე
           	find ~ | wc -l - ითვლის ამ ფაილების რაოდენობას
           	find ~ -type d –
           	find ~ -type f | wc -l – f ჩვეულებრივი ფაილების მოსაძებნად, l შორთქათებისთის
           	find ~ -name test.txt - ფაილს ეძებს სახელით
           	find ~ -name “*.txt” - ყველა txt ფაილი გამოაქვს
           	find . -perm 664 - შეესაბამება მხოლოდ იმ ფაილს, რომელსაც 664 უფლება აქვს
           	find ~ -type f \( -name “a*” -or -name “b*” \) - მოძებნის ჩვეულებრივი ტიპის ყველა ფაილს, რომლის სახელიც a ან b-თი იწყება
           	-iname file -    -name-ის მსგავსია, მხოლოდ ფაილის დასახელებაში დიდსა და პატარა ასოებს აღარ გაარჩევს.
           	-empty -  ცარიელი ფაილი ან დირექტორია
           	-user username  - მიესადაგება ყველა იმ ფაილს, რომლის მფლობელი არის username
           	-group groupname - მიესადაგება ყველა ფაილს, რომლის მფლობელის ჯგუფი არის groupname
           	-perm mode - აღნიშნავს ყვლა ფაილს, რომელზე წვდომის უფლებებიც ემთხვევა მითითებული mode-ს. mode-ის ჩაწერა, როგორც chmod ბრძანების შემთხვევაში, 2 სახითაა შესაძლებელი: ციფრული ან სიმბოლური.
           	-mtime n - მიესადაგება იმ ფაილებს, რომლებიც n*24 საათის წინ შეიცვალა. შესაძლებელია, აგრეთვე, -n ან +n გამოვიყენოთ n-ზე ნაკლების ან მეტის აღსანიშნავად.
           	-atime n - მიესადაგება იმ ფაილებს, რომლებსაც სტატუსი n*24 საათის წინ შეუცვალეს.
           	-ctime n - მიესადაგება იმ ფაილებს, რომლებსაც, სტატუსი n*24 საათის წინ შეუცვალეს
           	-mmin n –  | მიესადაგება ყველა ფაილს, რომელთა შესაბამისი მახასიათებელიც n წუთის წინ შეიცვალა.
           	-amin n –   | აქაც შესაძლებელია აქგრეთვე -n ან +n გამოყენება n-ზე ნაკლების ან მეტის აღსანიშნავად
           	-cmin n –   |
           	-newer file - მიესადაგება ყველა ფაილს, რომლის mtime-იც უფრო ახალია ვიდრე file-ის mtime
           	-anewer file - | მიესადაგება ყველა ფიალს, რომლის atime/ctime
           	-cnewer file - | უფრო ახალია ვიდრე file-ის mtime
           	. -perm -444 -perm /222 ! -perm /111 - მოძებნის ყველა ფაილს რომლის კითხვაც ყველას შეუძლია (-perm -444), ცვლილების გაკეთება - ერთ-ერთს (მფლობელს, ჯგუფს ან სხვა მომხმარებელს) მაინც (-perm /222) და შესურლება - არავის (! -perm /111).
           	ზომის მიხედვით ფაილების მოძიება ხდება -size კრიტერიუმის მიხედვით. უნდა მივუთითოთ ზომა და ერთეული. ეს ერთეულებია: c - ბაიტის აღსანიშნავად; w - ორბაიტიანი სიტყვა; k - კილობაიტი; M - მეგაბაიტი; G - გიგაბაიტი ან b – 512ბაიტიანი ბლოკი. თუ ერთეულს არ მივუთითებთ, ნაგულისხმევი მნიშვნელობა სწორედ b იქნება.
fmt - ბრძანება ტექსტური ფაილების ფორმატირებასა და ოპტიმიზაციას უზრუნველყოფს
           	-w, --width= - მიუთითებს ხაზზე რამდენი ასო-ნიშანი შეიძლება დაეტიოს. ნაგულისხმევი - 75, ქართული - 25
           	-t, --tagged-paraghraph - უკეთესი კითხვადობისთვის გამოყოფს აბზაცს
           	-s, --split-only - უკეთესი კითხვადობისთვის გამოყოფს გრძელ ხაზებს
           	-u, --uniform-spacing - აერთგვაროვნებს ტექსტს. სიტყვებს შორის სვამს მაქსიმუმ ერთ გამოტოვებას, ხოლო წინადადებებს შორის კი 2-ს.
getfacl file1 - გამოაქვს დამატებითი ACL წვდომები
grep (global regular expression print)
           	grep “pattern” file.txt - ეძებს კონკრეტულ “pattern”-ს ფაილში და გამოაქვს ხაზები, რომლებიც მას შეიცავენ
           	“^error” file.txt - ^ სიმბოლოს გამოაქვს ყველა ხაზი რომლებიც იწყება სიტყვით error ფაილში
           	-r “pattern” /path/to/directory - This command recursively searches for the specified "pattern" in all files within the /path/to/directory and its subdirectories.
           	-n “pattern” file.txt – This command shows the line numbers for each line containing the specified "pattern" in file.txt
           	-i “pattern” file.txt – This command searches for the specified "pattern" in file.txt regardless of letter case
           	-v “pattern” file.txt – This command shows all lines in file.txt that do not contain the specified "pattern."
groupadd groupname - ჯგუფის შექმნა
           	groupadd –gid 888 developers - დეველოპერების ჯგუფი შეიქმნა აიდით 888
groupdel groupname - ჯგუფის წაშლა
groups username - ამოწმებს რომელი ჯგუფის წევრია იუზერი
help [command] - იგივეა რაც man ოღონდ builtin command-ებისთვის
history - გამოყენებული ქომანდების ისტორია ქრონოლოგიურად
hostname - სისტემის სახელი
id username - გამოაქვს იუზერის რამდენიმე აიდი (uid; gid; groups)
info (file) - ეკრანზე გამოაქვს განმარტება /usr/share/info/
info {command} - გამოაქვს ინფორმაცია ქომანდზე
kill -L - გამოაქვს სიგნალების სია
           	kill -SIGKILL process_ID – terminates/kills the program/browser using its ID  [kill -9 PID]
           	kill -SIGSTOP PID –	| ეს ორი პროცესი აჩერებს და აგრძლებს ვიდეოს ბრაუზერში
           	kill -SIGCONT PID –   | იყენებს ბრაუზერის PID-ს
less file1 - გამოაქვს file1-ის შიგთავს გვერდებად/ნაწილებად
           	UP and DOWN arrow keys
ln original-file hard-link - ქმნის hard-link-ს (მხოლოდ ფაილს)[same inode]
ln -s original-file soft-link - ქმნის soft-link-ს (ფაილიც და დირექტორიაც)[different inode]
ls - იმ დირექტორიის შიგთავსის სია, რომელშიც მუშაობ
           	ls /var/log - /var/log-ის შეგთავსი გამოაქვს
           	ls -a - დაფარული ფაილების გამოსაჩენად [--all]
           	ls -a -l - გრძელი სია ფაილების, + დაფარული ფაილები
           	ls -d - list directories themselves, not their contents
           	ls -I – file - ბეჭდავს inode-ს ó stat file
           	ls -l - დირექტორიის შიგთავსის დეტალური სია
           	ls -l -a -t -r ó ls -latr
           	ls -l -t - გრძელი სია by modification times, newest first
           	ls -l -t -r - შეაბრუნებს ჩამონათვალს
           	ls -l -t -u - sort by access times
           	ls -la - იმ დირექტორიის შიგთავსის სია(დამალული ფაილებიც), რომელშიც მუშაობ
           	ls -la /var/log - /var/log-ის შეგთავსი გამოაქვს დამალულ ფაილებთან ერთად
           	ls -R - recursive listing
lsattr file1 - გამოიყნება ფაილური სისტემის ატრიბუტების სანახავად, რომლებიც მინიჭებულია ფაილზე
lsb_release -a - უბუნტუს ვერსია, რომელსაც ვიყენებთ იმ კონკრეტულ მომენტში
lscpu - CPU ინფო
man (command) - გამოაქვს command-ის ინფო, რისთვის გამოიყენება
           	space/ Ctrl+F - მომდევნო გვერდზე გადადის
           	Ctrl+B - წინა გვერდზე გადადის
           	/word - ეძებს word-ს
           	q – quit the man page
           	n - სიტყვის მოძებნის შემდეგ next occurrence
           	N - სიტყვის მოძებნის შემდეგ previous occurance
           	man -f ó whatis
           	man -k ó apropos
mkdir newdir - ქმნის ახალ დირექტორიას
           	mkdir -p dir1/dir2/dir3 - რამდენიმე დირექტორიის შექმნა ერთმანეთის შიგნით
more /etc/services - ფაილის კონტენტი
           	Enter - scroll down one line
           	Space Bar - next page
           	b - go back one page
           	q - quit
mv - გადააქვს დირექტორია/ფაილი სხვა დირექტორიაში ან უცვლის დასახელებას დირექტორიას/ფაილს
nice -n -20 - პროცესის დასტარტვა ჩვენ მიერ მინიჭებული პრიორიტეტის მიხედვით
           	nice -n -20 apt-get upgrade – upgrades all the packages on the system
passwd - პაროლის შეცვლა
patch test.txt t1_t2.diff - ორიგინალი ფაილით და ახალი შექმნილი ფაილით(რომელშიც შედარების შედეგია ჩაწერილი) შეგვიძლია აღვადგინოთ მეორე ორიგინალი ფაილის შიგთავსი
ps -u username - გამოაქვს ყველა პროცესი, რომლებსაც კონკრეტული იუზერი ფლობს
           	ps -e  - გამოაქვს ყველა პროცესი, რომლებიც იმ მომენტში არის მიმდინარე/running
           	ps -ef – [ps -e] იგივე ოღონდ მეტი ინფო გამოაქვს
           	pgrep process_name - გვაძლევს process_name-ის ID-ს
           	ps -fp process_ID – გვაძლევს ინფოს პროცესის შესახებ
           	ps -o nice -p PID - გამოაქვს პროცესის nice value
pwd - დირექტორიის სახელი, რომელშიც მუშაობ
reboot - სისტემის გადატვირთვა
rm - ფაილის წაშლა
           	rm -r - დირექტორიის წაშლა
rmdir dir1 - დირექტორიის წაშლა (მაშინ როცა ცარიელია)
route –
setfacl – is used to set Access Control Lists (ACLs) for files and directories
           	setfacl -m u:username:rw file1 - იუზერის იღებს rw წვდომას file1-ზე
           	setfacl -x g:groupname file1 - შლის ACL წვდომებს ჯგუფისთვის file1-ზე
           	setfacl -d u::rwx, g::r-x, o::r-x dir1 - აძლევს default ACL წვდომებს dir1--ზე. იუზერს აქვს rwx, ჯგუფს და სხვებს - r-x
           	setfacl -m u:iser1:rw-, u:user2:r-- file1 – user1-ს აქვს rw წვდომა file1-ზე, user2-ს აქვს r წვდომა file1-ზე
shutdown -h now - თიშავს დაუყოვნებლივ
           	shutdown -h -t 90 - თიშავს 90 წამში
           	shutdown -r now - რესტარტი დაუყოვნებლივ
split -b200 lorem.txt – lorem.txt-ის ყოფს 200 ბიტიან ნაწილებად
           	split -b200 lorem.txt Danakopi_
           	split -b200 -d lorem.txt Danakopi_
           	split -b1M file - მეგაბაიტებში
           	split -l100 file – 100ხაზიანი დანაყოფები
           	split -n5 file  - 5 ტოლ ნაწილად დაყოფა
stat file - ბეჭდავს inode-ს + lists all the file attributes
strings - return each string type of characters that are printable in the file.
su - ცვლის/ანაცვლებს იუზერის credentials
           	su - root - ცვლის/ანაცვლებს root user-ს, სისტემა მოითხოვს root-ის პაროლს
sudo -i - წვდომა root იუზერზე, საშუალებას გვაძლევს გავაკეთოთ ის მოქმედებები, რაზეც აქამდე წვდომა არ გვქონდა
tail - ტექსტური ფაილის ბოლო რამდენიმე ხაზი გამოაქვს
           	-n N file.txt- გამოაქვს N რაოდენობის ხაზები ფაილიდან
           	-f – monitors log files in real-time
           	-c N - ბოლო N რაოდენობის ბაიტები გამოაქვს
           	-q – never print headers giving file names
           	-v – always print headers giving file names
touch file1 - ქმნის ფაილს
type [command] - ქომანდის ტიპს წერს
umask - გამოიყენება ახლადშექმნილი დირექტორიებისა და ფაილებისთვის წვდომების წასართმევად/მისანიჭებლად
uname - სისტემის კერნელ ინფორმაცია
           	-v - მიმდინარე კერნელის ვერსია
           	-r - მიმდინარე კერნელის გამოშვების ინფორმაცია
           	-a - ყველა ინფო მიმდინარე კერნელის შესახებ
uptime - სისტემა როგორ მდგომარეობაშია, მიმდინარე დრო, იუზერების რაოდენობა, სისტემის ჩატვირთვის საშუალო დრო
useradd -m tom - ამატებს იუზერ tom-ს (მხოლოდ root-დან)[-m უზრუნველყოფს ახალი home დირექტორიის შექმნას]
userdel username - იუზერის წაშლა home დირექტორიის გარეშე
           	useradd -m -u 777 -c “Jerry the Mouse” -s /bin/bash jerry [UID – 777; Comment – Jerry the Mouse; Shell - /bin/bash]
           	userdel -r username - იუზერის წაშლა home დირექტორიასთან ერთად
usermod -s /bin/bash tom - ცვლის default shell-ს ტომისტვის
           	usermod -aG cartoon tom - ამატებს იუზერ ტომს ჯგუფში cartoon
           	usermod – comment [-c] “Tom the Cat” tom - ცვლის/ქმნის კომენტარს ტომისთვის
           	usermod -u 444 tom - ცვლის UID-ს ტომისთვის
users - გამოაქვს ყველა იუზერის სახელი
whatis (name) - გამოაქვს name-ის მოკლე განმართება სახელმძღვანელო გვერდიდან [man -f]
whatis {command} - გამოაქვს მოეცმული ქომანდის მოკლე აღწერა
whereis (cmd) - აბრუნებს ბრძანებისა და მისი სახელმძღვანელო გვერდის სრულ გზას
which (command) - გამოაქვს რომელ ადგილას არის მოთავსებული command
whoami - გამოაქვს რომელ იუზერს ვიყენებთ
yes STRING – outputs any string that follows it repeatedly until killed (process is killed with Ctrl+C)
